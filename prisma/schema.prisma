// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  email      String      @unique
  password   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  profile    Profile
  characters Character[]
}

type Profile {
  firstName String
  lastName  String
}

model Character {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  user            User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId          String
  characterName   String?         @default("")
  alignment       Alignment?      @default(N)
  level           String?         @default("0")
  class           String?         @default("")
  home            String?         @default("")
  gender          String?         @default("")
  health          Health?
  height          String?
  weight          String?
  race            String?
  deity           String?
  size            String?
  hairColor       String?
  eyes            String?
  age             String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  stats           Stats?
  ac              AC?
  dr              DR?
  sr              SR?
  resistances     Resistances?
  cmb             CMB?
  immunities      Immunities?
  cmd             CMD?
  initiative      Initiative?
  bab             String?
  speed           Speed?
  saves           Saves?
  skills          Json?
  feats           Feat[]
  traits          Trait[]
  items           Item[]
  notes           Note[]
  known_languages KnownLanguages?
  xp              XP?
  weapons         Weapon[]
  spells          Spell[]
  armor           Armor[]
  image           String?         @default("https://i.imgur.com/0Z0Z0Z0.png")
}

enum Alignment {
  LG
  NG
  CG
  LN
  N
  CN
  LE
  NE
  CE
}

model Spell {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  level       Int?
  school      String?
  time        String?
  range       String?
  components  String?
  duration    String?
  description String?
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  image       String    @default("https://i.imgur.com/0Z0Z0Z0.png")
}

type XP {
  current Int
  needed  Int
}

model Weapon {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  damage      String
  critical    String
  range       String
  type        String
  properties  String
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  image       String    @default("https://i.imgur.com/0Z0Z0Z0.png")
}

type Speed {
  base    String
  armor   String
  fly     String
  swim    String
  climb   String
  burrow  String
  tempMod String
}

type Health {
  current   Int @default(0)
  max       Int @default(0)
  nonlethal Int @default(0)
  temp      Int @default(0)
}

type DR {
  type   String
  amount Int
}

type SR {
  type   String
  amount Int
}

type AC {
  total Int
  touch Int
  flat  Int
}

type Resistances {
  type String
}

type Immunities {
  type String
}

type CMD {
  total   Int
  sizeMod Int
  miscMod Int
  tempMod Int
}

type Saves {
  fortitude Int
  reflex    Int
  will      Int
}

type Initiative {
  total   Int
  miscMod Int
}

type CMB {
  total     Int
  sizeMod   Int
  miscMod   Int
  tempMoInt Int
}

type Stats {
  strength     Stat?
  dexterity    Stat?
  constitution Stat?
  intelligence Stat?
  wisdom       Stat?
  charisma     Stat?
}

type Stat {
  value    Int? @default(0)
  modifier Int? @default(0)
}

type Skills {
  acrobatics              Skill
  appraise                Skill
  athletics               Skill
  bluff                   Skill
  climb                   Skill
  craft                   Skill
  diplomacy               Skill
  disableDevice           Skill
  disguise                Skill
  escapeArtist            Skill
  fly                     Skill
  handleAnimal            Skill
  heal                    Skill
  intimidation            Skill
  linguistics             Skill
  perception              Skill
  performance             Skill
  profession              Skill
  ride                    Skill
  senseMotive             Skill
  sleightOfHand           Skill
  spellcraft              Skill
  stealth                 Skill
  survival                Skill
  swim                    Skill
  useMagicDevice          Skill
  knowwledgeArcana        Skill
  knowwledgeDungeoneering Skill
  knowwledgeEngineering   Skill
  knowwledgeGeography     Skill
  knowwledgeHistory       Skill
  knowwledgeLocal         Skill
  knowwledgeNature        Skill
  knowwledgeNobility      Skill
  knowwledgePlanes        Skill
  knowwledgeReligion      Skill
}

type Skill {
  rank    String?
  trained Boolean @default(false)
}

type KnownLanguages {
  name String
}

model Feat {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  name        String
  description String
}

model Trait {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  name        String
  description String
}

model Item {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  stats       Stats
}

model Armor {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  ac          Int
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Note {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
